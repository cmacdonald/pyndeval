name: Upload Python Package

on:
  workflow_dispatch:
    inputs:
      releasetype:
        description: "Is this a 'release' or a 'test'?" 
        required: true
        default: 'test'

jobs:
  deploy-sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: build
      run: |
        python setup.py sdist
    - name: 'test upload'
      if: github.event.inputs.releasetype == 'test'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      run: |
        twine upload --repository testpypi dist/*
    - name: upload
      if: github.event.inputs.releasetype == 'release'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
    - uses: actions/upload-artifact@v2
      with:
        name: sdist-manylinux
        path: dist/*

  deploy-bdist-manylinux2010:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - uses: pypa/cibuildwheel@v2.13.1
      with:
        output-dir: wheelhouse
      env:
        CIBW_SKIP: "*musllinux*"
    - name: 'test upload'
      if: github.event.inputs.releasetype == 'test'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      run: |
        twine upload --repository testpypi wheelhouse/*
    - name: upload
      if: github.event.inputs.releasetype == 'release'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload wheelhouse/*
    - uses: actions/upload-artifact@v2
      with:
        name: bdist-manylinux2010
        path: wheelhouse/*

  deploy-bdist-macos:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']
        os: ['macos-latest']
        architecture: ['x64']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: build
      run: |
        python setup.py bdist_wheel
    - name: 'test upload'
      if: github.event.inputs.releasetype == 'test'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      run: |
        twine upload --repository testpypi dist/*
    - name: upload
      if: github.event.inputs.releasetype == 'release'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
    - uses: actions/upload-artifact@v2
      with:
        name: bdist-macos
        path: dist/*

  deploy-bdist-windows:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']
        os: ['windows-latest']
        architecture: ['x64']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: build
      run: |
        python setup.py bdist_wheel
    - name: 'test upload'
      if: github.event.inputs.releasetype == 'test'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
      run: |
        twine upload --repository testpypi dist/*
    - name: upload
      if: github.event.inputs.releasetype == 'release'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
    - uses: actions/upload-artifact@v2
      with:
        name: bdist-windows
        path: dist/*
